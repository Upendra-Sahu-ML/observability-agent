name: Helm Chart Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths:
      - 'helm/**'
      - '.github/workflows/helm-publish.yml'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0

      - name: Add Helm repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set chart version from git tag
        id: chart_version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
          else
            VERSION=$(grep 'version:' helm/observability-agent/Chart.yaml | awk '{print $2}')
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
          fi

      - name: Update Helm chart version
        if: github.ref_type == 'tag'
        run: |
          sed -i "s/^version:.*/version: ${{ steps.chart_version.outputs.version }}/" helm/observability-agent/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"${{ steps.chart_version.outputs.version }}\"/" helm/observability-agent/Chart.yaml

      - name: Helm package
        run: |
          mkdir -p .cr-release-packages
          helm package helm/observability-agent --dependency-update --destination .cr-release-packages

      - name: Publish Helm chart to GHCR
        run: |
          HELM_PACKAGE=$(ls .cr-release-packages/observability-agent-*.tgz)
          PACKAGE_NAME=$(basename $HELM_PACKAGE)
          echo "Publishing $PACKAGE_NAME to GHCR"
          
          # Convert package to OCI format and push to GHCR
          helm push $HELM_PACKAGE oci://ghcr.io/${{ github.repository_owner }}/charts